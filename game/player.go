package game

import (
	"fmt"
	"strconv"
)

type positionOutOfBound struct {
	row    int
	column int
}

type valueNotValid struct {
	value int
}

type originalValue struct {
	value int
}

func (e *positionOutOfBound) Error() string {
	return fmt.Sprintf("posistion (%d,%d) is out of bounds...", e.row, e.column)
}

func (e *valueNotValid) Error() string {
	return fmt.Sprintf("value %d is not 1-9", e.value)
}

func (e *originalValue) Error() string {
	return fmt.Sprintf("cannot modify an original value generated by the puzzle...", e.value)
}

func (s *State) placeNumber(row int, column int, value int) error {
	if row < 1 || column < 0 || row >= 10 || column >= 10 {
		return &positionOutOfBound{row, column}
	}
	if value < 1 || value >= 10 {
		return &valueNotValid{value}
	}
	pos, err := strconv.Atoi(fmt.Sprintf("%d%d", row, column))
	if err != nil {
		panic(err)
	}
	for _, element := range dictOriginalValues {
		if pos == element {
			return &originalValue{value}

		}
	}
	return nil
}
